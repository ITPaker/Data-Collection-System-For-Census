/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sys_prototype_revised;

import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.awt.event.WindowEvent;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowSorter;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import static sys_prototype_revised.WORKER_DB_FOR_EDIT.record_table;

public class WORKER_UPDATE extends javax.swing.JFrame {

    private static String username;
    private static Connection Dbcon;

    private String sUrl = "jdbc:mysql://localhost:3306/user_" + username;
    private String sUser = "root";
    private String spass = "";
        
        
    private static PreparedStatement pst;
    private static ResultSet result;
    
    
    public WORKER_UPDATE(String username, Connection Dbcon, Map<String, String> data) {
        this.username = username;
        this.Dbcon = Dbcon;
        initComponents();
        
        r_first_name.setText(data.get("FirstName"));
        r_last_name.setText(data.get("LastName"));// Assuming r_last_name is your JTextField for Last Name
        r_address.setText(data.get("Address"));  // Assuming r_address is your JTextField for Address
        r_email_adress.setText(data.get("Email"));
        r_contact.setText(data.get("Contact"));
        r_household_serial.setText(data.get("Household"));
        inCharge.setText(data.get("Worker"));
        r_suffix.setText(data.get("Suffix"));
        r_middle_name.setText(data.get("M_name"));
        r_age.setText(data.get("Age"));
        r_birthdate.setText(data.get("B_date"));
        r_birthplace.setText(data.get("B_place"));
        r_religion.setText(data.get("Religion"));
        r_citizenship.setText(data.get("Citizenship"));
        r_profession.setText(data.get("Profession"));
        r_enumeration_serial.setText(data.get("Enumer"));
        r_building_serial.setText(data.get("Build"));
        r_housing_unit_serial.setText(data.get("Housing"));
        r_sex_combobox.setSelectedItem(data.get("Sex"));
        r_status_combobox.setSelectedItem(data.get("Status"));
        r_attainment_combobox_registration.setSelectedItem(data.get("Attainment"));        
    }

    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PANEL_3 = new javax.swing.JPanel();
        r_last_name = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        r_suffix = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        r_first_name = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        r_middle_name = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        r_sex_combobox = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        r_age = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        r_status_combobox = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        r_birthdate = new javax.swing.JTextField();
        r_birthplace = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        r_religion = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        r_citizenship = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        r_profession = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        r_address = new javax.swing.JTextField();
        r_email_adress = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        r_contact = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        r_attainment_combobox_registration = new javax.swing.JComboBox<>();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        r_enumeration_serial = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        r_building_serial = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        r_housing_unit_serial = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        r_household_serial = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        inCharge = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        worker_update_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        PANEL_3.setBackground(new java.awt.Color(220, 227, 238));
        PANEL_3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PANEL_3.setForeground(new java.awt.Color(247, 247, 247));
        PANEL_3.setPreferredSize(new java.awt.Dimension(940, 300));

        r_last_name.setBackground(new java.awt.Color(247, 247, 247));
        r_last_name.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_last_name.setForeground(new java.awt.Color(40, 40, 40));
        r_last_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_last_name.setPreferredSize(new java.awt.Dimension(125, 25));
        r_last_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_last_nameActionPerformed(evt);
            }
        });

        jLabel27.setBackground(new java.awt.Color(247, 247, 247));
        jLabel27.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(40, 40, 40));
        jLabel27.setText("RESPONDENT");
        jLabel27.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel27.setPreferredSize(new java.awt.Dimension(105, 20));

        jLabel28.setBackground(new java.awt.Color(247, 247, 247));
        jLabel28.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(40, 40, 40));
        jLabel28.setText("PERSONAL INFORMATION");
        jLabel28.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel28.setPreferredSize(new java.awt.Dimension(105, 20));

        jLabel29.setBackground(new java.awt.Color(247, 247, 247));
        jLabel29.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(40, 40, 40));
        jLabel29.setText("Last Name");

        r_suffix.setBackground(new java.awt.Color(247, 247, 247));
        r_suffix.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_suffix.setForeground(new java.awt.Color(40, 40, 40));
        r_suffix.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_suffix.setPreferredSize(new java.awt.Dimension(90, 25));
        r_suffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_suffixActionPerformed(evt);
            }
        });

        jLabel30.setBackground(new java.awt.Color(247, 247, 247));
        jLabel30.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(40, 40, 40));
        jLabel30.setText("Suffix");

        r_first_name.setBackground(new java.awt.Color(247, 247, 247));
        r_first_name.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_first_name.setForeground(new java.awt.Color(40, 40, 40));
        r_first_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_first_name.setPreferredSize(new java.awt.Dimension(150, 25));
        r_first_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_first_nameActionPerformed(evt);
            }
        });

        jLabel31.setBackground(new java.awt.Color(247, 247, 247));
        jLabel31.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(40, 40, 40));
        jLabel31.setText("First Name");

        r_middle_name.setBackground(new java.awt.Color(247, 247, 247));
        r_middle_name.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_middle_name.setForeground(new java.awt.Color(40, 40, 40));
        r_middle_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_middle_name.setPreferredSize(new java.awt.Dimension(125, 25));
        r_middle_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_middle_nameActionPerformed(evt);
            }
        });

        jLabel32.setBackground(new java.awt.Color(247, 247, 247));
        jLabel32.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(40, 40, 40));
        jLabel32.setText("Middle Name");

        jLabel33.setBackground(new java.awt.Color(247, 247, 247));
        jLabel33.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(40, 40, 40));
        jLabel33.setText("Sex");

        r_sex_combobox.setBackground(new java.awt.Color(247, 247, 247));
        r_sex_combobox.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_sex_combobox.setForeground(new java.awt.Color(40, 40, 40));
        r_sex_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        r_sex_combobox.setPreferredSize(new java.awt.Dimension(75, 25));

        jLabel34.setBackground(new java.awt.Color(247, 247, 247));
        jLabel34.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(40, 40, 40));
        jLabel34.setText("Age");

        r_age.setBackground(new java.awt.Color(247, 247, 247));
        r_age.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_age.setForeground(new java.awt.Color(40, 40, 40));
        r_age.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_age.setPreferredSize(new java.awt.Dimension(40, 25));
        r_age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_ageActionPerformed(evt);
            }
        });

        jLabel35.setBackground(new java.awt.Color(247, 247, 247));
        jLabel35.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(40, 40, 40));
        jLabel35.setText("Status");

        r_status_combobox.setBackground(new java.awt.Color(247, 247, 247));
        r_status_combobox.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_status_combobox.setForeground(new java.awt.Color(40, 40, 40));
        r_status_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Widowed" }));
        r_status_combobox.setPreferredSize(new java.awt.Dimension(90, 25));

        jLabel36.setBackground(new java.awt.Color(247, 247, 247));
        jLabel36.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(40, 40, 40));
        jLabel36.setText("Birthdate (mm/dd/yyyy) ");

        r_birthdate.setBackground(new java.awt.Color(247, 247, 247));
        r_birthdate.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_birthdate.setForeground(new java.awt.Color(40, 40, 40));
        r_birthdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_birthdate.setPreferredSize(new java.awt.Dimension(125, 25));
        r_birthdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_birthdateActionPerformed(evt);
            }
        });

        r_birthplace.setBackground(new java.awt.Color(247, 247, 247));
        r_birthplace.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_birthplace.setForeground(new java.awt.Color(40, 40, 40));
        r_birthplace.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_birthplace.setPreferredSize(new java.awt.Dimension(400, 25));
        r_birthplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_birthplaceActionPerformed(evt);
            }
        });

        jLabel37.setBackground(new java.awt.Color(247, 247, 247));
        jLabel37.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(40, 40, 40));
        jLabel37.setText("Email Address");

        r_religion.setBackground(new java.awt.Color(247, 247, 247));
        r_religion.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_religion.setForeground(new java.awt.Color(40, 40, 40));
        r_religion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_religion.setPreferredSize(new java.awt.Dimension(100, 25));
        r_religion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_religionActionPerformed(evt);
            }
        });

        jLabel38.setBackground(new java.awt.Color(247, 247, 247));
        jLabel38.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(40, 40, 40));
        jLabel38.setText("Religion");

        r_citizenship.setBackground(new java.awt.Color(247, 247, 247));
        r_citizenship.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_citizenship.setForeground(new java.awt.Color(40, 40, 40));
        r_citizenship.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_citizenship.setPreferredSize(new java.awt.Dimension(100, 25));
        r_citizenship.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_citizenshipActionPerformed(evt);
            }
        });

        jLabel39.setBackground(new java.awt.Color(247, 247, 247));
        jLabel39.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(40, 40, 40));
        jLabel39.setText("Citizenship");

        r_profession.setBackground(new java.awt.Color(247, 247, 247));
        r_profession.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_profession.setForeground(new java.awt.Color(40, 40, 40));
        r_profession.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_profession.setPreferredSize(new java.awt.Dimension(125, 25));
        r_profession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_professionActionPerformed(evt);
            }
        });

        jLabel40.setBackground(new java.awt.Color(247, 247, 247));
        jLabel40.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(40, 40, 40));
        jLabel40.setText("Profession");

        jLabel41.setBackground(new java.awt.Color(247, 247, 247));
        jLabel41.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(40, 40, 40));
        jLabel41.setText("Residence Address");

        r_address.setBackground(new java.awt.Color(247, 247, 247));
        r_address.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_address.setForeground(new java.awt.Color(40, 40, 40));
        r_address.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_address.setPreferredSize(new java.awt.Dimension(380, 25));
        r_address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_addressActionPerformed(evt);
            }
        });

        r_email_adress.setBackground(new java.awt.Color(247, 247, 247));
        r_email_adress.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_email_adress.setForeground(new java.awt.Color(40, 40, 40));
        r_email_adress.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_email_adress.setPreferredSize(new java.awt.Dimension(185, 25));
        r_email_adress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_email_adressActionPerformed(evt);
            }
        });

        jLabel42.setBackground(new java.awt.Color(247, 247, 247));
        jLabel42.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(40, 40, 40));
        jLabel42.setText("Place Of Birth");

        r_contact.setBackground(new java.awt.Color(247, 247, 247));
        r_contact.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_contact.setForeground(new java.awt.Color(40, 40, 40));
        r_contact.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_contact.setPreferredSize(new java.awt.Dimension(125, 25));
        r_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_contactActionPerformed(evt);
            }
        });

        jLabel43.setBackground(new java.awt.Color(247, 247, 247));
        jLabel43.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(40, 40, 40));
        jLabel43.setText("Contact No.");

        r_attainment_combobox_registration.setBackground(new java.awt.Color(247, 247, 247));
        r_attainment_combobox_registration.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_attainment_combobox_registration.setForeground(new java.awt.Color(40, 40, 40));
        r_attainment_combobox_registration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elementary", "High School", "College", "Post Grad", "Vocational" }));
        r_attainment_combobox_registration.setPreferredSize(new java.awt.Dimension(125, 25));
        r_attainment_combobox_registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_attainment_combobox_registrationActionPerformed(evt);
            }
        });

        jLabel44.setBackground(new java.awt.Color(247, 247, 247));
        jLabel44.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(40, 40, 40));
        jLabel44.setText("Educational Attainment");

        jLabel45.setBackground(new java.awt.Color(247, 247, 247));
        jLabel45.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(40, 40, 40));
        jLabel45.setText("HOUSING INFORMATION");
        jLabel45.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel45.setPreferredSize(new java.awt.Dimension(105, 20));

        r_enumeration_serial.setBackground(new java.awt.Color(247, 247, 247));
        r_enumeration_serial.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_enumeration_serial.setForeground(new java.awt.Color(40, 40, 40));
        r_enumeration_serial.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_enumeration_serial.setPreferredSize(new java.awt.Dimension(165, 25));
        r_enumeration_serial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_enumeration_serialActionPerformed(evt);
            }
        });

        jLabel46.setBackground(new java.awt.Color(247, 247, 247));
        jLabel46.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(40, 40, 40));
        jLabel46.setText("Enumeration Serial Number");

        r_building_serial.setBackground(new java.awt.Color(247, 247, 247));
        r_building_serial.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_building_serial.setForeground(new java.awt.Color(40, 40, 40));
        r_building_serial.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_building_serial.setPreferredSize(new java.awt.Dimension(50, 25));
        r_building_serial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_building_serialActionPerformed(evt);
            }
        });

        jLabel47.setBackground(new java.awt.Color(247, 247, 247));
        jLabel47.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(40, 40, 40));
        jLabel47.setText("Building Serial Number");

        r_housing_unit_serial.setBackground(new java.awt.Color(247, 247, 247));
        r_housing_unit_serial.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_housing_unit_serial.setForeground(new java.awt.Color(40, 40, 40));
        r_housing_unit_serial.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_housing_unit_serial.setPreferredSize(new java.awt.Dimension(165, 25));
        r_housing_unit_serial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_housing_unit_serialActionPerformed(evt);
            }
        });

        jLabel48.setBackground(new java.awt.Color(247, 247, 247));
        jLabel48.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(40, 40, 40));
        jLabel48.setText("Housing Unit Serial Number");

        r_household_serial.setBackground(new java.awt.Color(247, 247, 247));
        r_household_serial.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        r_household_serial.setForeground(new java.awt.Color(40, 40, 40));
        r_household_serial.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        r_household_serial.setPreferredSize(new java.awt.Dimension(165, 25));
        r_household_serial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_household_serialActionPerformed(evt);
            }
        });

        jLabel49.setBackground(new java.awt.Color(247, 247, 247));
        jLabel49.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(40, 40, 40));
        jLabel49.setText("Household Serial Number");

        jLabel51.setBackground(new java.awt.Color(247, 247, 247));
        jLabel51.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(40, 40, 40));
        jLabel51.setText("WORKER IN CHARGE");
        jLabel51.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel51.setPreferredSize(new java.awt.Dimension(105, 20));

        inCharge.setBackground(new java.awt.Color(247, 247, 247));
        inCharge.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        inCharge.setForeground(new java.awt.Color(40, 40, 40));
        inCharge.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inCharge.setPreferredSize(new java.awt.Dimension(165, 25));
        inCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inChargeActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(76, 119, 102));
        jButton2.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(235, 230, 224));
        jButton2.setText("<");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(247, 247, 247));
        jLabel1.setFont(new java.awt.Font("Bahnschrift", 1, 24)); // NOI18N
        jLabel1.setText("UPDATE RESPONDENT DETAILS");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(220, 227, 238), null, null));

        worker_update_button.setBackground(new java.awt.Color(76, 119, 102));
        worker_update_button.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        worker_update_button.setForeground(new java.awt.Color(235, 230, 224));
        worker_update_button.setText("UPDATE");
        worker_update_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        worker_update_button.setPreferredSize(new java.awt.Dimension(80, 25));
        worker_update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worker_update_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PANEL_3Layout = new javax.swing.GroupLayout(PANEL_3);
        PANEL_3.setLayout(PANEL_3Layout);
        PANEL_3Layout.setHorizontalGroup(
            PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_3Layout.createSequentialGroup()
                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(r_last_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addGap(10, 10, 10)
                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PANEL_3Layout.createSequentialGroup()
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addGap(270, 270, 270)
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel42)
                                            .addGroup(PANEL_3Layout.createSequentialGroup()
                                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r_religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel38))
                                                .addGap(10, 10, 10)
                                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(r_citizenship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel39)))))
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r_suffix, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel30))
                                        .addGap(10, 10, 10)
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel31)
                                            .addComponent(r_first_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r_middle_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel32)
                                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r_sex_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel33))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addComponent(jLabel34)
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel35)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel40))
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addComponent(r_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(r_status_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(r_profession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addComponent(jLabel44)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel43))
                                    .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(PANEL_3Layout.createSequentialGroup()
                                            .addComponent(r_attainment_combobox_registration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(r_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(inCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(worker_update_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(PANEL_3Layout.createSequentialGroup()
                                .addGap(270, 270, 270)
                                .addComponent(r_birthplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PANEL_3Layout.createSequentialGroup()
                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PANEL_3Layout.createSequentialGroup()
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(r_enumeration_serial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47)
                                    .addComponent(r_building_serial, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addComponent(jLabel48)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel49))
                                    .addGroup(PANEL_3Layout.createSequentialGroup()
                                        .addComponent(r_housing_unit_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(r_household_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(r_address, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PANEL_3Layout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r_email_adress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel37)))
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        PANEL_3Layout.setVerticalGroup(
            PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_3Layout.createSequentialGroup()
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PANEL_3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE))
                    .addGroup(PANEL_3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)))
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel40))
                .addGap(0, 0, 0)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r_suffix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_middle_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_first_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_last_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_sex_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_status_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_profession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43))
                .addGap(0, 0, 0)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r_birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_citizenship, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_attainment_combobox_registration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_email_adress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42))
                .addGap(0, 0, 0)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_birthplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(PANEL_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r_enumeration_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_building_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_housing_unit_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r_household_serial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(worker_update_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 924, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(PANEL_3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(PANEL_3, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void r_last_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_last_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_last_nameActionPerformed

    private void r_suffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_suffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_suffixActionPerformed

    private void r_first_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_first_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_first_nameActionPerformed

    private void r_middle_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_middle_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_middle_nameActionPerformed

    private void r_ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_ageActionPerformed

    private void r_birthdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_birthdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_birthdateActionPerformed

    private void r_birthplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_birthplaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_birthplaceActionPerformed

    private void r_religionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_religionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_religionActionPerformed

    private void r_citizenshipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_citizenshipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_citizenshipActionPerformed

    private void r_professionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_professionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_professionActionPerformed

    private void r_addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_addressActionPerformed

    private void r_email_adressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_email_adressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_email_adressActionPerformed

    private void r_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_contactActionPerformed

    private void r_attainment_combobox_registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_attainment_combobox_registrationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_attainment_combobox_registrationActionPerformed

    private void r_enumeration_serialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_enumeration_serialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_enumeration_serialActionPerformed

    private void r_building_serialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_building_serialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_building_serialActionPerformed

    private void r_housing_unit_serialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_housing_unit_serialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_housing_unit_serialActionPerformed

    private void r_household_serialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_household_serialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_household_serialActionPerformed

    private void inChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inChargeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            close();
            WORKER_DB_FOR_EDIT main_L = new WORKER_DB_FOR_EDIT(username, Dbcon);
            main_L.setVisible(true);
            main_L.pack();
            main_L.setLocationRelativeTo(null);
            this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void worker_update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worker_update_buttonActionPerformed
        String worker_in_charge, l_name, suffix, f_name, m_name, sex, age, status,
        birthdate, birthplace, religion, citizenship, profession,
        address,  email, contact_no, attainment,
        enumeration_serial, building_serial, housing_unit_serial, household_serial,
        listing_date;

        String SUrl = "jdbc:mysql://localhost:3306/user_" + username;
        String SUser = "root";
        String Spass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(SUrl, SUser, Spass);

            // Validate inputs
            if (isInputValid()) {

                l_name = r_last_name.getText();
                suffix = r_suffix.getText();
                f_name = r_first_name.getText();
                m_name = r_middle_name.getText();
                sex = r_sex_combobox.getSelectedItem().toString();
                age =  r_age.getText();
                status =  r_status_combobox.getSelectedItem().toString();
                birthdate = r_birthdate.getText();
                birthplace = r_birthplace.getText();
                religion =  r_religion.getText();
                citizenship = r_citizenship.getText();
                profession = r_profession.getText();
                address = r_address.getText();
                email =  r_email_adress.getText();
                contact_no = r_contact.getText();
                attainment = r_attainment_combobox_registration.getSelectedItem().toString();
                enumeration_serial = r_enumeration_serial.getText();
                building_serial =  r_building_serial.getText();
                housing_unit_serial = r_housing_unit_serial.getText();
                household_serial = r_household_serial.getText();
                worker_in_charge = inCharge.getText();

                updateRespondent(Dbcon, worker_in_charge, l_name, suffix, f_name, m_name, sex, age, status,
                    birthdate, birthplace, religion, citizenship, profession,
                    address,  email, contact_no, attainment,
                    enumeration_serial, building_serial, housing_unit_serial, household_serial);

                showTableDb();
                UpdateDB();
                
                clearFields();

                JOptionPane.showMessageDialog(this, "Respondent is now Successfully Updated");
                close();
                WORKER_DB_FOR_EDIT main_L = new WORKER_DB_FOR_EDIT(username, Dbcon);
                main_L.setVisible(true);
                main_L.pack();
                main_L.setLocationRelativeTo(null);
            this.dispose();
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_worker_update_buttonActionPerformed

    private void updateRespondent(Connection Dbcon, String worker_in_charge, String l_name, String suffix, String f_name, String m_name, 
        String sex, String age, String status, String birthdate, String birthplace, String religion, 
        String citizenship, String profession, String address, String email, String contact_no, String attainment, 
        String enumeration_serial, String building_serial, String housing_unit_serial, 
        String household_serial) throws SQLException {

        String query = "UPDATE res_info SET respondent_email = ?, f_name = ?, l_name = ?, address = ?, contact_no = ?," + 
                       "household_serial= ?, worker_incharge = ?, suffix = ?, m_name = ?, r_sex = ?," + 
                       "r_status = ?, r_age = ?, r_birthdate = ?, r_birthplace = ?, r_religion = ?," + 
                       "r_citizenship = ?, r_profession = ?, r_attainment = ?, enumeration_serial = ?," + 
                       "building_serial = ?, housing_unit_serial = ?, date_listed = NOW() WHERE respondent_email = ?";
    
        try (PreparedStatement insertaddRespondentStmt = Dbcon.prepareStatement(query)) {
            insertaddRespondentStmt.setString(1, email);
            insertaddRespondentStmt.setString(2, f_name);
            insertaddRespondentStmt.setString(3, l_name);
            insertaddRespondentStmt.setString(4, address);
            insertaddRespondentStmt.setString(5, contact_no);
            insertaddRespondentStmt.setString(6, household_serial);
            insertaddRespondentStmt.setString(7, worker_in_charge);
            insertaddRespondentStmt.setString(8, suffix);
            insertaddRespondentStmt.setString(9, m_name);
            insertaddRespondentStmt.setString(10, sex);
            insertaddRespondentStmt.setString(11, status);
            insertaddRespondentStmt.setString(12, age);
            insertaddRespondentStmt.setString(13, birthdate);
            insertaddRespondentStmt.setString(14, birthplace);
            insertaddRespondentStmt.setString(15, religion);
            insertaddRespondentStmt.setString(16, citizenship);
            insertaddRespondentStmt.setString(17, profession);
            insertaddRespondentStmt.setString(18, attainment);
            insertaddRespondentStmt.setString(19, enumeration_serial);
            insertaddRespondentStmt.setString(20, building_serial);
            insertaddRespondentStmt.setString(21, housing_unit_serial);
            insertaddRespondentStmt.setString(22, email);
            insertaddRespondentStmt.executeUpdate();
        }
    }
    
    
    public void UpdateDB(){
        
        String sUrl = "jdbc:mysql://localhost:3306/user_" + username;
        String sUser = "root";
        String spass = "";
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Dbcon = DriverManager.getConnection(sUrl, sUser, spass);
            pst = Dbcon.prepareStatement("SELECT * FROM res_info ORDER BY time_created DESC");
            
            result = pst.executeQuery();
            ResultSetMetaData resultData = result.getMetaData();
            
            int q = resultData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)record_table.getModel();
            RecordTable.setRowCount(0);
            
            while(result.next()){
                Vector columnData = new Vector();
                
                for(int r = 1; r <= q; r++){
                    columnData.add(result.getString("respondent_email"));
                    columnData.add(result.getString("f_name"));
                    columnData.add(result.getString("l_name"));
                    columnData.add(result.getString("address"));
                    columnData.add(result.getString("contact_no"));
                    columnData.add(result.getString("household_serial"));
                    columnData.add(result.getString("date_listed"));
                    columnData.add(result.getString("validation"));
                    
                }
                RecordTable.addRow(columnData);
            }
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void showTableDb()throws SQLException{
        if(Dbcon == null || Dbcon.isClosed()){
            System.out.println("CHECK DATABASE CONNECTION");
            return;
        }
        String query = "SELECT * FROM res_info ORDER BY time_created DESC";
        try(PreparedStatement stmt = Dbcon.prepareStatement(query)){
            
            ResultSet result = stmt.executeQuery();
            
            DefaultTableModel RecordTable = (DefaultTableModel)record_table.getModel();
            RecordTable.setRowCount(0);
            
            
            
            while(result.next()){
                /*StringBuilder details = new StringBuilder();
                ResultSetMetaData metadata = result.getMetaData();
                int columnCount = metadata.getColumnCount();
                */
                String r_email = result.getString("respondent_email");
                String first_name = result.getString("f_name");
                String last_name = result.getString("l_name");
                String r_add = result.getString("address");
                String contact = result.getString("contact_no");
                String household_s = result.getString("household_serial");
                String lisiting_date = result.getString("date_listed");
                String w_valid = result.getString("validation");
                
                RecordTable.addRow(new Object[]{r_email, first_name,last_name, r_add, contact, household_s, lisiting_date, w_valid});
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(this, "Error loading data" + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE );
        }     
    }
    
    private boolean isInputValid() {
        if ("".equals(r_last_name.getText())) {
            showError("Respondent's Last Name is Required");
            return false;
        }else if ("".equals(inCharge.getText())) {
            showError("who is the worker in charge of this respondent?");
            return false;
        }else if ("".equals(r_suffix.getText())) {
            showError("if the respondent have no suffix in their name just put '/none'/ ");
            return false;
        } else if ("".equals(r_first_name.getText())) {
            showError("Respondent's First Name is Required");
            return false;
        } else if ("".equals(r_middle_name.getText())) {
            showError("Respondent's Middle Name is Required");
            return false;
        } else if ("".equals(r_age.getText())) {
            showError("Respondent's age is Required");
            return false;
        } else if ("".equals(r_birthdate.getText())) {
            showError("Respondent's date of birth is very important");
            return false;
        } else if ("".equals(r_birthplace.getText())) {
            showError("Respondent's place of birth is Required");
            return false;
        } else if ("".equals(r_religion.getText())) {
            showError("Respondent's religion is somewhat Required");
            return false;
        } else if ("".equals(r_citizenship.getText())) {
            showError("Citizenship of the respondent is Required");
            return false;
        } else if ("".equals(r_profession.getText())) {
            showError("Respondent's profession is required");
            return false;
        } else if ("".equals(r_address.getText())) {
            showError("Respondent's address is required");
            return false;
        }else if ("".equals(r_email_adress.getText())) {
            showError("Respondent's contact email is required");
            return false;
        }else if ("".equals(r_contact.getText())) {
            showError("Respondent's contact number is required");
            return false;
        }else if ("".equals(r_enumeration_serial.getText())) {
            showError("Respondent's enumeration serial number is required");
            return false;
        }else if ("".equals(r_building_serial.getText())) {
            showError("Respondent's building serial number is required");
            return false;
        }else if ("".equals(r_housing_unit_serial.getText())) {
            showError("Respondent's housing unit serial number is required");
            return false;
        }else if ("".equals(r_household_serial.getText())) {
            showError("Respondent's household serial number is required");
            return false;
        }
        return true;
    }
    
    private void clearFields() {
        r_last_name.setText("");
        r_suffix.setText("");
        r_first_name.setText("");
        r_middle_name.setText("");
        r_age.setText("");
        r_birthdate.setText("");
        r_birthplace.setText("");
        r_religion.setText("");
        r_citizenship.setText("");
        r_profession.setText("");
        r_address.setText("");
        r_email_adress.setText("");
        r_contact.setText("");
        r_enumeration_serial.setText("");
        r_building_serial.setText("");
        r_housing_unit_serial.setText("");
        r_household_serial.setText("");
        inCharge.setText("");
    }
    private void showError(String message) {
         JOptionPane.showMessageDialog(this, message,"Error", JOptionPane.ERROR_MESSAGE);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WORKER_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WORKER_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WORKER_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WORKER_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Map<String, String> data = new HashMap<>();
                    data.put("FirstName", "");
                    data.put("LastName", "");
                    data.put("Address", "");
                    data.put("Email", "");
                    data.put("Contact", "");
                    data.put("Household", "");
                    data.put("Worker", "");
                    data.put("Suffix", "");
                    data.put("M_name", "");
                    data.put("Age", "");
                    data.put("B_date", "");
                    data.put("B_place", "");
                    data.put("Religion", "");
                    data.put("Citizenship", "");
                    data.put("Profession", "");
                    data.put("Enumer", "");
                    data.put("Build", "");
                    data.put("Housing", "");
                    data.put("Sex", "");
                    data.put("Status", "");
                    data.put("Attainment", "");
                    data.put("Date_Added", "");
                    data.put("Entry", "");

                    WORKER_UPDATE v_UI = new WORKER_UPDATE(username, Dbcon, data);
                new WORKER_UPDATE(username, Dbcon, data).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PANEL_3;
    public static javax.swing.JTextField inCharge;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel51;
    public static javax.swing.JTextField r_address;
    public static javax.swing.JTextField r_age;
    public static javax.swing.JComboBox<String> r_attainment_combobox_registration;
    public static javax.swing.JTextField r_birthdate;
    public static javax.swing.JTextField r_birthplace;
    public static javax.swing.JTextField r_building_serial;
    public static javax.swing.JTextField r_citizenship;
    public static javax.swing.JTextField r_contact;
    public static javax.swing.JTextField r_email_adress;
    public static javax.swing.JTextField r_enumeration_serial;
    public static javax.swing.JTextField r_first_name;
    public static javax.swing.JTextField r_household_serial;
    public static javax.swing.JTextField r_housing_unit_serial;
    public static javax.swing.JTextField r_last_name;
    public static javax.swing.JTextField r_middle_name;
    public static javax.swing.JTextField r_profession;
    public static javax.swing.JTextField r_religion;
    public static javax.swing.JComboBox<String> r_sex_combobox;
    public static javax.swing.JComboBox<String> r_status_combobox;
    public static javax.swing.JTextField r_suffix;
    private javax.swing.JButton worker_update_button;
    // End of variables declaration//GEN-END:variables
}
