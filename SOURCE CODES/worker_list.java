/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sys_prototype_revised;

import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class worker_list extends javax.swing.JFrame {

    private Connection Dbcon;
    private static PreparedStatement pst;
    private static ResultSet result;
    
    private String sUrl = "jdbc:mysql://localhost:3306/census_system_db";
    private String sUser = "root";
    private String spass = "";
    
    public worker_list() {
        initComponents();
        SwingUtilities.invokeLater(this::connectLoadData);
    }

    public void connectLoadData(){
        try{
            connectToDB();
            showTableDb();
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE );
        }
    }
    
    public void connectToDB() throws SQLException{
        String SUrl = "jdbc:mysql://localhost:3306/census_system_db";
        String SUser = "root";
        String Spass = "";
        Dbcon = DriverManager.getConnection(SUrl, SUser, Spass);
    }
    
    private void showError(String message) {
         JOptionPane.showMessageDialog(new worker_list.JFrame(), message,"Error", JOptionPane.ERROR_MESSAGE);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_panel_WL = new javax.swing.JPanel();
        admin_Label = new javax.swing.JLabel();
        return_main = new javax.swing.JButton();
        table_scroll_manager = new javax.swing.JScrollPane();
        worker_list_tables = new javax.swing.JTable();
        show_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        main_panel_WL.setBackground(new java.awt.Color(220, 227, 238));
        main_panel_WL.setPreferredSize(new java.awt.Dimension(850, 500));

        admin_Label.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        admin_Label.setForeground(new java.awt.Color(40, 40, 40));
        admin_Label.setText("WORKERS YOU MANAGE");
        admin_Label.setPreferredSize(new java.awt.Dimension(215, 25));
        admin_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_LabelMouseClicked(evt);
            }
        });

        return_main.setBackground(new java.awt.Color(76, 119, 102));
        return_main.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        return_main.setForeground(new java.awt.Color(235, 230, 224));
        return_main.setText("<");
        return_main.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        return_main.setPreferredSize(new java.awt.Dimension(30, 30));
        return_main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                return_mainActionPerformed(evt);
            }
        });

        worker_list_tables.setBackground(new java.awt.Color(247, 247, 247));
        worker_list_tables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Contact Number", "Email", "Address", "Age"
            }
        ));
        table_scroll_manager.setViewportView(worker_list_tables);

        show_button.setBackground(new java.awt.Color(247, 247, 247));
        show_button.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        show_button.setForeground(new java.awt.Color(40, 40, 40));
        show_button.setText("SHOW MORE DETAILS");
        show_button.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        show_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout main_panel_WLLayout = new javax.swing.GroupLayout(main_panel_WL);
        main_panel_WL.setLayout(main_panel_WLLayout);
        main_panel_WLLayout.setHorizontalGroup(
            main_panel_WLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panel_WLLayout.createSequentialGroup()
                .addGroup(main_panel_WLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(main_panel_WLLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(show_button))
                    .addGroup(main_panel_WLLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(main_panel_WLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(table_scroll_manager, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                            .addGroup(main_panel_WLLayout.createSequentialGroup()
                                .addComponent(admin_Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(return_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );
        main_panel_WLLayout.setVerticalGroup(
            main_panel_WLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panel_WLLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(main_panel_WLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_Label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(return_main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(table_scroll_manager, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(show_button)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main_panel_WL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main_panel_WL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void admin_LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_LabelMouseClicked

    }//GEN-LAST:event_admin_LabelMouseClicked

    private void return_mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_return_mainActionPerformed
            close();
            proto_admin_UI admin_UI = new proto_admin_UI();
            admin_UI.setVisible(true);
            admin_UI.pack();
            admin_UI.setLocationRelativeTo(null);
            this.dispose();
        
    }//GEN-LAST:event_return_mainActionPerformed

    private void show_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_buttonActionPerformed
        
    
        int selectedRow = worker_list_tables.getSelectedRow();
        String sUrl = "jdbc:mysql://localhost:3306/census_system_db";
        String sUser = "root";
        String spass = "";

        if (selectedRow != -1) {  
            String name = worker_list_tables.getValueAt(selectedRow, 1).toString();

            String query = "SELECT * FROM login_details WHERE username = ?";

            try (Connection conn = DriverManager.getConnection(sUrl, sUser, spass);
                 PreparedStatement stmt = conn.prepareStatement(query)) {

                stmt.setString(1, name);

                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {  
                        Map<String, String> data = new HashMap<>();
                        data.put("Full_Name", rs.getString("name"));
                        data.put("Username", rs.getString("username"));
                        data.put("Email", rs.getString("email"));
                        data.put("Age", rs.getString("age"));
                        data.put("Birthdate", rs.getString("birth_date"));
                        data.put("Address", rs.getString("address"));
                        data.put("Sex", rs.getString("sex"));
                        data.put("Cluster", rs.getString("cluster"));
                        data.put("Attainment", rs.getString("attainment"));
                        data.put("Contact", rs.getString("contact_no"));
                        data.put("Status", rs.getString("user_status"));

                        close();
                        FROM_ADMIN_SHOW_WHO_WORKER show_UI = new FROM_ADMIN_SHOW_WHO_WORKER(data);
                        show_UI.setVisible(true);
                        show_UI.pack();
                        show_UI.setLocationRelativeTo(null);
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "No data found for the selected email.");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error while retrieving data: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "No row selected");
        }
    }//GEN-LAST:event_show_buttonActionPerformed

    
    public void UpdateDB(){
        
        String sUrl = "jdbc:mysql://localhost:3306/census_system_db";
        String sUser = "root";
        String spass = "";
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Dbcon = DriverManager.getConnection(sUrl, sUser, spass);
            pst = Dbcon.prepareStatement("SELECT * FROM login_details WHERE role = 'WORKER'");
            
            result = pst.executeQuery();
            ResultSetMetaData resultData = result.getMetaData();
            
            int q = resultData.getColumnCount();
            
            DefaultTableModel RecordTable = (DefaultTableModel)worker_list_tables.getModel();
            RecordTable.setRowCount(0);
            
            while(result.next()){
                Vector columnData = new Vector();
                
                for(int r = 1; r <= q; r++){
                    columnData.add(result.getString("name"));
                    columnData.add(result.getString("username"));
                    columnData.add(result.getString("contact_no"));
                    columnData.add(result.getString("email"));
                    columnData.add(result.getString("address"));
                    columnData.add(result.getString("age"));
                }
                RecordTable.addRow(columnData);
            }
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void showTableDb()throws SQLException{
        if(Dbcon == null || Dbcon.isClosed()){
            System.out.println("CHECK DATABASE CONNECTION");
            return;
        }
        String query = "SELECT * FROM login_details WHERE role = 'WORKER'";
        try(PreparedStatement stmt = Dbcon.prepareStatement(query)){
            
            ResultSet result = stmt.executeQuery();
            
            DefaultTableModel RecordTable = (DefaultTableModel)worker_list_tables.getModel();
            RecordTable.setRowCount(0);
            
            
            
            while(result.next()){
                /*StringBuilder details = new StringBuilder();
                ResultSetMetaData metadata = result.getMetaData();
                int columnCount = metadata.getColumnCount();
                */
                String w_name = result.getString("name");
                String w_user = result.getString("username");
                String w_contact = result.getString("contact_no");
                String w_email = result.getString("email");
                String w_address = result.getString("address");
                String w_age = result.getString("age");

                
                RecordTable.addRow(new Object[]{w_name, w_user, w_contact, w_email, w_address, w_age});
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(this, "Error loading data" + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE );
        }     
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(worker_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(worker_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(worker_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(worker_list.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new worker_list().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel admin_Label;
    private javax.swing.JPanel main_panel_WL;
    private javax.swing.JButton return_main;
    private javax.swing.JButton show_button;
    private javax.swing.JScrollPane table_scroll_manager;
    public static javax.swing.JTable worker_list_tables;
    // End of variables declaration//GEN-END:variables

    private static class JFrame extends Component {

        public JFrame() {
        }
    }
}
